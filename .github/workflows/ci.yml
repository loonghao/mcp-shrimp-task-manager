name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type checking
      run: npx tsc --noEmit

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm run test:ci

    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Check build artifacts
      run: |
        ls -la dist/
        test -f dist/index.js
        test -f dist/index.d.ts

    - name: Verify template integrity
      run: |
        # Check that all critical template files exist in both languages
        echo "Checking template file integrity..."

        # Critical tool description files
        TOOLS=(
          "planTask.md" "analyzeTask.md" "reflectTask.md" "splitTasks.md"
          "listTasks.md" "executeTask.md" "verifyTask.md" "deleteTask.md"
          "clearAllTasks.md" "updateTask.md" "queryTask.md" "getTaskDetail.md"
          "processThought.md" "initProjectRules.md" "researchMode.md"
          "getProjectContext.md" "analyzeWorkingDirectory.md" "setProjectWorkingDirectory.md"
          "diagnoseMcpEnvironment.md" "viewRealtimeLogs.md" "resetProjectDetection.md"
          "showPathStatus.md" "validateProjectIsolation.md"
        )

        # Check both languages
        for lang in zh en; do
          echo "Checking templates_${lang}..."
          for tool in "${TOOLS[@]}"; do
            file="dist/prompts/templates_${lang}/toolsDescription/${tool}"
            if [ ! -f "$file" ]; then
              echo "❌ Missing: $file"
              exit 1
            else
              echo "✅ Found: $file"
            fi
          done
        done

        echo "✅ All template files verified!"

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check code formatting
      run: |
        # Add prettier check if available
        if [ -f .prettierrc ]; then
          npx prettier --check "src/**/*.{ts,js,json}"
        fi

    - name: Check for common issues
      run: |
        # Check for TODO/FIXME comments in production code
        if grep -r "TODO\|FIXME" src/ --exclude-dir=node_modules; then
          echo "Warning: Found TODO/FIXME comments in source code"
        fi

  security:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

    - name: Check for vulnerabilities
      run: |
        # Run npm audit and capture output
        if ! npm audit --audit-level=high; then
          echo "High severity vulnerabilities found!"
          exit 1
        fi
